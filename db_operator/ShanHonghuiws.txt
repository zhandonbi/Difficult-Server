 def item_search_exact(self, item_name: str):

        """

        搜索数据库某个物品所属垃圾类别

        :param item_name: 物品名称

        :return: 返回一个字典，包含该垃圾ID以及所属所有类别{'ID':1,'Name':xxx,'C1':1/2/3/4,}

        """

        result = {}

        sql = 'SELECT * FROM items WHERE Name = '+'"'+item_name+'"'

        self.db_cur.execute(sql)

        search_results = self.db_cur.fetchall()

        if len(search_results) != 0:

            result['ID'] = search_results[0][0]

            result['Name'] = search_results[0][1]

            result['ClassID'] = int(search_results[0][2])





        return result



    def items_search_vague(self, item_key: str):

        """

        搜索含有指定关键字条目(为减小数据量，只返回ID，与物品名)

        :param item_key: 该批物品的共同含有的字符（鸡蛋，鸡蛋壳，鸡蛋黄，鸡蛋清）

        :return: 所有符合搜索条件的物品条目格式{'item_ID':item_name,'item_ID2':item_name2...}

        """

        result = {}

        """

        sql = 'SELECT * FROM items WHERE Name = '+'"'+item_key+'"'

        self.db_cur.execute(sql)

        search_vague_results = self.db_cur.fetchall()

        if len(search_vague_results) != 0:
	    for i in range(len(search_vague_results)):

                result['ID' '+' i] = search_vague_results[0][i]


               
        """

        return result



    def items_read_all(self,item_Class:dir()):

        """

        此函数不面向客户使用，用于后台数据管理

        一次性读取数据库所有内容(为减小数据量，只返回ID，与物品名)

        :return: 字典形式，格式为{'item_ID':item_name,'item_ID2':item_name2...}

        """

        result = {}

        """
	Class0 = Class1 + Class2 + Class3 +Class4

        sql = 'SELECT * FROM items WHERE Class = '+'"'+item_Class+'"'

        self.db_cur.execute(sql)

        read_all_results = self.db_cur.fetchall()

        if len(read_all_results) != 0:

	    for i in range(len(read_all_results)):

                result['ID' '+' i] = read_all_results[0][i]



        """

        return result